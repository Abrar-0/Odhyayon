// Generated by view binder compiler. Do not edit!
package com.firstapp.myapplication.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import com.firstapp.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUsercheckSignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final Button studentSignup;

  @NonNull
  public final Button teacherSignup;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView4;

  private ActivityUsercheckSignupBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView3, @NonNull Button studentSignup, @NonNull Button teacherSignup,
      @NonNull TextView textView2, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.imageView3 = imageView3;
    this.studentSignup = studentSignup;
    this.teacherSignup = teacherSignup;
    this.textView2 = textView2;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUsercheckSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUsercheckSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_usercheck_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUsercheckSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.student_signup;
      Button studentSignup = ViewBindings.findChildViewById(rootView, id);
      if (studentSignup == null) {
        break missingId;
      }

      id = R.id.teacher_signup;
      Button teacherSignup = ViewBindings.findChildViewById(rootView, id);
      if (teacherSignup == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityUsercheckSignupBinding((ConstraintLayout) rootView, imageView3,
          studentSignup, teacherSignup, textView2, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
